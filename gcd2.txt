M R1 0x60 ; R1에 96 저장
M R2 0xF ; R2에 15 저장
C R1 R2 ; R1과 R2 값이 같은지, 누가 더 큰 지 비교
BEQ 0x15 ; 애초에 R1 R2가 같으면 종료
- R0 0x1 ; 근데 R0가 +1이라면, 즉, op1>op2라면, R0를 0으로 만들어서
BEQ 0xA ; 바로 뺄셈으로 가기
M R3 R1 ; R1 < R2라면 본격적인 뺄셈 전, swap 과정 하기 - R1을 임시로 R3에 저장
M R1 R2 ; R2값을 R1에 저장
M R2 R3 ; R3값을 R2에 저장
- R1 R2 ; R0 = 96-15=81
M R1 R0 ; 결과와 원래 작은 수(15)를 새로운 두 수로 취급
C R1 R2 ; R0 = +1이면, 즉, op1 > op2이면
BEQ 0x15 ; R1, R2값이 같으면 종료, 그렇지 않다면
- R0 0x1 ; R0 = 0을 만들어서
BEQ 0xA ; 뺄셈 반복
M R3 R1 ; 결과(6)가 원래 작은 수(15)보다 작아지면, 결과(6)을 잠시 R3에 저장
M R1 R2 ; R0 = -1이면, 즉, op1 < op2이면 원래 작은 수는 R2가 아닌 R1이 됨
M R2 R3 ; R3값을 원래 작은 수를 보관하는 R2에 저장
+ R0 0x2 ; -2인 R0에 2를 더해서 
BEQ 0xA ; 10번째 줄부터 뺄셈 다시 반복
HLT